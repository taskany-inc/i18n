/* eslint-disable */
// Do not edit, use generator to update
<%_ if (formatterPath) { _%>
import { i18n, I18nLangSet } from 'easy-typed-intl';

import fmt from '<%- formatterPath %>';
<%_ } else { _%>
import { i18n, fmt, I18nLangSet } from 'easy-typed-intl';
<% } _%>
<%_ if (getLangPath) { _%>
import getLang from '<%- getLangPath %>';
<% } _%>

<%_ for (const lang of langs) { _%>
import <%- lang %> from './<%- lang %>.json';
<%_ } _%>

export type I18nKey = <%- langs.map((lang) => `keyof typeof ${lang}`).join(' & ') %>;
type I18nLang = <%- langs.map(l => `'${l}'`).join(' | ') %>;

const keyset: I18nLangSet<I18nKey> = {};
<%_ if (splitLangs) { %>
<%_ for (const lang of langs) { _%>
if (process.env.<%- envVarName %> === '<%- lang %>') keyset['<%- lang %>'] = <%- lang %>;
<%_ } _%>
<% } else { %>
<%_ for (const lang of langs) { _%>
keyset['<%- lang %>'] = <%- lang %>;
<%_ } _%>
<% } _%>

export const <%- funcName %> = i18n<I18nLang, I18nKey>(keyset, fmt, getLang);
